Cronología del proyecto

- Sección Login:
- creación archivo /controllers/LoginController.php
- crear rutas para Login, en el router, /public/index.php
- crear rutas para Crear Cuenta, en el router, /public/index.php
- crear los métodos login(), logout(), crear() en /controllers/LoginController.php
- crear rutas para Olvide mi password, en el router, /public/index.php
- crear rutas para Restablecer password, en el router, /public/index.php
- crear los métodos olvide() y restablecer() en /controllers/LoginController.php
- crear rutas para Mensaje confirmar, en el router, /public/index.php
- crear rutas para Confirmar, en el router, /public/index.php
- crear los métodos mensaje() y confirmar() en /controllers/LoginController.php
- comprobar las urls del router.
- crear las vistas de la sección login, /views/auth/ .php
- crear estilos css en src/scss/auth _.scss

- crear tabla usuarios: id (auto-increment), nombre, email, password, token, confirmado

- Sección Crear Cuenta de Usuario:
- crear modelo de Usuario en /models/Usuario.php, respetando las columnas de la tabla usuarios
- sincronizar el modelo Usuario con el $_POST en /controllers/LoginController.php
- asignar los value="<?php echo …?>" a los inputs vista formulario, para no perder los datos en la validación.
- crear método de validación del formulario crear cuenta en /models/Usuario.php
- crear nueva platilla vista alertas (de error o exito) en /view/templates/alertas.php
- insertar la plantilla de alertas con include_once a /views/auth/crear.php
- etilos .scss para los mensajes de error del formulario, en /src/scss/componentes/_alertas.scss
- verificar si el usuario ya existes, antes de crear cuenta nueva. /controller/LoginController.php
- hashear el password, en /models/Usuario.php
- eliminar password2 en /controllers/LoginController.php
- generar un token único en /models/Usuario.php
- guardar el nuevo usuario en la DB y mostrar mensaje, valien /controllers/LoginController.php
- En composer.json, "autload" - "psr-4", agregar "Classes\\" : "./classes"
- Crear una clase para enviar un email de confirmación, con phpmailer. En /clases/Email.php
- Método enviar email, con phpmailer, de confirmación en /classes/Email.php (servidor email mailtrap.io)
- Confirmar la cuenta de usuario creada, leyendo el token de la url /confirmar. /controllers/LoginController.php
- Se el token es ok, asigna 1 a la prop confirmado, elimina el token, elimina la prop password2, guarda el usuario.

- Sección olvidé password:









 






